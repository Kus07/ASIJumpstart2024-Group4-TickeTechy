@model ASI.Basecode.Services.ServiceModels.AdminViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="content-body">
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger" style="border-radius: 0;" role="alert">
            @TempData["error"]
        </div>
    }
    @if (ViewBag.Errors != null)
    {
        <div class="alert alert-danger" style="border-radius: 0;" role="alert">
            @ViewBag.Errors
        </div>
    }
    @if (TempData["message"] != null)
    {
        <div class="alert alert-success" style="border-radius: 0;" role="alert">
            @TempData["message"]
        </div>
    }
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="card-title">
                            <h4>Agents</h4>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover" id="customersTable">
                                <thead>
                                    <tr>
                                        <th>First name</th>
                                        <th>Last name</th>
                                        <th>Email</th>
                                        <th>Phone</th>
                                        <th>Department</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var agent in Model.Agents)
                                    {
                                        <tr>
                                            <td>@agent.FirstName</td>
                                            <td>@agent.LastName</td>
                                            <td>@agent.Users.Email</td>
                                            <td>@agent.ContactNo</td>
                                            @if(agent.Users.DepartmentId == null)
                                            {
                                                <td>No department</td>
                                            }
                                            else
                                            {
                                            <td>@agent.Users.Department.DepartmentName</td>   
                                            }
                                            <td>
                                                <a class="btn btn-warning roleAdminBtn" style="color: white;"
                                                   data-id="@agent.Users.Id"
                                                   data-target="#editRoleModal"
                                                   data-toggle="modal">Role</a>
                                                ||
                                                <a class="btn btn-info editCustomerBtn"
                                                   style="color: white;" id="showEditCustomerModalBtn" data-toggle="modal"
                                                   data-target="#editCustomerModal"
                                                   data-id="@agent.Users.Id"
                                                   data-firstname="@agent.FirstName"
                                                   data-lastname="@agent.LastName"
                                                   data-email="@agent.Users.Email"
                                                   data-username="@agent.Users.Username"
                                                   data-password="@agent.Users.Password"
                                                   data-department="@agent.Users.Department.Id"
                                                   data-phone="@agent.ContactNo">Edit</a>
                                                ||
                                                <a class="btn btn-danger deleteCustomerBtn" style="color: white;"
                                                   id="showDeleteCustomerModalBtn" data-toggle="modal" data-id="@agent.Users.Id" data-customername="@agent.FirstName"
                                                   data-target="#deleteCustomerModal">Delete</a>
                                                ||
                                                <a href="#" class="btn btn-primary generateReportBtn"
                                                id = "showGenerateReportModalBtn" data-toggle="modal" data-target="#generateReportModal"
                                                data-agentid="@agent.Id" data-agentname="@agent.FirstName @agent.LastName">Generate Report</a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <!-- Add Customer Button -->
                        <div class="mt-3 text-right">
                            <button type="button" class="btn btn-info" id="showAddCustomerModalBtn">
                                <i class="icon icon-plus"></i> Add Agent
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Generate Report Modal -->
<div class="modal fade" id="generateReportModal" tabindex="-1" role="dialog" aria-labelledby="generateReportModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="generateReportModalLabel">Generate Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="reportList"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonGenerate">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Customer Modal -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" role="dialog" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCustomerModalLabel">Add New Agent</h5>
            </div>
            <div class="modal-body">
                <!-- Form for adding a new customer -->
                @using (Html.BeginForm("AddAgent", "Admin", FormMethod.Post, new { @id = "addCustomerForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="firstName">First Name</label>
                        @Html.TextBox("firstName", null, new { @class = "form-control", @id = "firstName" })
                    </div>
                    <div class="form-group">
                        <label for="lastName">Last Name</label>
                        @Html.TextBox("lastName", null, new { @class = "form-control", @id = "lastName" })
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        @Html.TextBox("email", null, new { @class = "form-control", @id = "email", @type = "email" })
                    </div>
                    <div class="form-group">
                        <label for="phone">Phone</label>
                        @Html.TextBox("contactNo", null, new { @class = "form-control", @id = "phone", @type = "number" })
                    </div>
                    <div class="form-group">
                        <label for="username">Username</label>
                        @Html.TextBox("username", null, new { @class = "form-control", @id = "username" })
                    </div>

                    <!-- Department Dropdown -->
                    <div class="form-group">
                        <label for="departmentType">Department</label>
                        <select id="departmentType" class="form-control">
                            <option value="General">General</option>
                            <option value="Specific">Specific</option>
                        </select>
                    </div>

                    <!-- Specific Department Dropdown, hidden by default -->
                    <div class="form-group" id="specificDepartmentGroup" style="display: none;">
                        <label for="specificDepartment">Specific Department</label>
                        <select id="specificDepartment" class="form-control" name="department">
                            <option value="1">HR</option>
                            <option value="2">IT/Systems</option>
                            <option value="3">Facilities</option>
                            <option value="4">Finance</option>
                            <option value="5">Project Management</option>
                            <option value="6">Security</option>
                        </select>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="addCustomerBtn">Add</button>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonAdd">Close</button>
            </div>
        </div>
    </div>
</div>



<!-- Delete Agent Modal -->
<div class="modal fade" id="deleteCustomerModal" tabindex="-1" role="dialog" aria-labelledby="deleteCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteCustomerModalLabel">Confirm Deletion</h5>
            </div>
            <div class="modal-body">
                <p id="output">Are you sure you want to delete this agent?</p>
                <p>This action cannot be undone.</p>
            </div>
            @using (Html.BeginForm("DeleteAgent", "Admin", FormMethod.Post, new { @id = "deleteCustomerForm" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" id="customerId" name="AgentId" />
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonDelete">Cancel</button>
                    <button type="submit" class="btn btn-danger" id="confirmDeleteCustomerBtn">Delete</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Edit Agent Modal -->
<div class="modal fade" id="editCustomerModal" tabindex="-1" role="dialog" aria-labelledby="editCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCustomerModalLabel">Edit Agent</h5>
            </div>
            <div class="modal-body">
                <!-- Form for editing customer details -->
                @using (Html.BeginForm("EditAgent", "Admin", FormMethod.Post, new { @id = "editCustomerForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("AgentId", null, new { @id = "customerIdUpdate" })

                    <div class="form-group">
                        <label for="editCustomerFirstName">First Name</label>
                        @Html.TextBox("firstName", null, new { @class = "form-control", @id = "editCustomerFirstName" })
                    </div>
                    <div class="form-group">
                        <label for="editCustomerLastName">Last Name</label>
                        @Html.TextBox("lastName", null, new { @class = "form-control", @id = "editCustomerLastName" })
                    </div>
                    <div class="form-group">
                        <label for="editUsername">Username</label>
                        @Html.TextBox("username", null, new { @class = "form-control", @id = "editUsername" })
                    </div>
                    <div class="form-group">
                        <label for="editEmail">Email</label>
                        @Html.TextBox("email", null, new { @class = "form-control", @id = "editEmail" })
                    </div>

                    <div class="form-group">
                        <label for="editPhone">Phone</label>
                        @Html.TextBox("contactNo", null, new { @class = "form-control", @id = "editPhone" })
                    </div>

                    <div class="form-group">
                        <label for="editDepartment">Department</label>
                        @Html.DropDownList("department", new List<SelectListItem>
                    {
                    new SelectListItem { Text = "General", Value = "7" },
                    new SelectListItem { Text = "HR", Value = "1" },
                    new SelectListItem { Text = "IT/Systems", Value = "2" },
                    new SelectListItem { Text = "Facilities", Value = "3" },
                    new SelectListItem { Text = "Finance", Value = "4" },
                    new SelectListItem { Text = "Project Management", Value = "5" },
                    new SelectListItem { Text = "Security", Value = "6" }
                    }, "Select Department", new { @class = "form-control", @id = "editDepartment" })
                    </div>

                    <br />
                    <button type="submit" class="btn btn-primary" id="saveCustomerBtn">Save Changes</button>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonEdit">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Role Modal -->
<div class="modal fade" id="editRoleModal" tabindex="-1" role="dialog" aria-labelledby="editRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editRoleModalLabel">Edit Role</h5>
            </div>
            <div class="modal-body">
                <!-- Form for editing role details -->
                @using (Html.BeginForm("EditUserRoleAgent", "Admin", FormMethod.Post, new { @id = "editRoleForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("userId", null, new { @id = "userIdUpdate" })

                    <div class="form-group">
                        <label for="role">Select Role</label>
                        <select id="role" name="newRoleId" class="form-control">
                            <option value="2">Agent</option>
                            <option value="1">Customer</option>
                            @if (User.IsInRole("4"))
                            {
                                <option value="3">Admin</option>
                            }
                        </select>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="saveRoleBtn">Save Changes</button>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonEditRole">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<script src="https://cdn.datatables.net/2.0.5/js/dataTables.js"></script>


<script>
    $(document).ready(function () {

        $('#departmentType').change(function () {
            if ($(this).val() === 'Specific') {
                $('#specificDepartmentGroup').show();
            } else {
                $('#specificDepartmentGroup').hide();
            }
        });


        let table = new DataTable('#customersTable');

        // Modal close functionality
        $('#closeModalButtonAdd, #closeModalFooterButtonAdd').click(function () {
            $('#addCustomerModal').modal('hide');
        });

        $('#closeModalButtonEdit, #closeModalFooterButtonEdit').click(function () {
            $('#editCustomerModal').modal('hide');
        });

        $('#closeModalButtonDelete, #closeModalFooterButtonDelete').click(function () {
            $('#deleteCustomerModal').modal('hide');
        });

        $('#closeModalFooterButtonEditRole').click(function () {
            $('#editRoleModal').modal('hide');
        });

        $('#closeModalFooterButtonGenerate').click(function () {
            $('#generateReportModal').modal('hide');
        });

        // Show Add Customer Modal
        $('#showAddCustomerModalBtn').click(function () {
            $('#addCustomerModal').modal('show');
        });

        // Event delegation for Delete Customer Modal
        $('#customersTable tbody').on('click', '.deleteCustomerBtn', function () {
            $('#deleteCustomerModal').modal('show');
            var id = $(this).data('id');
            var customerName = $(this).data('customername');

            // Set the data attribute 'customerId' in the confirm delete button
            $('#confirmDeleteCustomerBtn').data('customerid', id);

            // Set the customer name in the modal output
            $('#output').text('Are you sure you want to delete this customer? (' + customerName + ')');
        });

        // Confirm Delete Customer
        $('#confirmDeleteCustomerBtn').click(function () {
            var customerId = $(this).data('customerid');

            // Set the hidden input values
            $('#customerId').val(customerId);

            // Submit the form
            $('#deleteCustomerForm').submit();
        });

        // Event delegation for Edit Customer Modal
        $('#customersTable tbody').on('click', '.editCustomerBtn', function () {
            var firstName = $(this).data('firstname');
            var lastName = $(this).data('lastname');
            var username = $(this).data('username');
            var email = $(this).data('email');
            var phone = $(this).data('phone');
            var password = $(this).data('password');
            var customerId = $(this).data('id');
            var departmentId = $(this).data('department');
            console.log('dep od' + departmentId);
            $('#customerIdUpdate').val(customerId);
            $('#editCustomerFirstName').val(firstName);
            $('#editCustomerLastName').val(lastName);
            $('#editUsername').val(username);
            $('#editDepartment').val(departmentId);
            $('#editEmail').val(email);
            $('#editPhone').val(phone);
            $('#editPassword').val(password);
            $('#editCustomerModal').modal('show');
        });

        // Event delegation for Edit Role Modal
        $('#customersTable tbody').on('click', '.roleAdminBtn', function () {
            var userId = $(this).data('id');

            // Ensure userId is valid before proceeding
            if (userId) {
                $('#userIdUpdate').val(userId); // Set the user ID in the hidden field
                $('#editRoleModal').modal('show'); // Show the role modal
            } else {
                console.error("Invalid user ID: ", userId);
            }
        });
    });

    // Event delegation for Generate Report Modal
    $('#customersTable tbody').on('click', '.generateReportBtn', function () {
        $('#generateReportModal').modal('show');
        var agentId = $(this).data('agentid');
        var agentName = $(this).data('agentname');

        // Send AJAX request to generate report
        $.ajax({
            url: '@Url.Action("GenerateAgentReport", "Admin")',
            type: 'POST',
            data: { agentId: agentId },
            success: function (report) {
                console.log(report);
                var reportList = $('#reportList');
                reportList.empty(); // Clear existing list items

                var agentName = $('<li>').text(`Agent Name: ${report.agentName}`);
                reportList.append(agentName);

                var ticketsResolved = $('<li>').text(`Tickets Resolved: ${report.ticketsResolved}`);
                reportList.append(ticketsResolved);

                var averageResolutionTime = $('<li>').text(`Average Resolution Time: ${report.averageResolutionTime} hours`);
                reportList.append(averageResolutionTime);

                var customerSatisfactionScore = $('<li>').text(`Customer Satisfaction Score: ${report.customerSatisfactionScore}/5`);
                reportList.append(customerSatisfactionScore);
                $('#generateReportModal').modal('show');
            },
            error: function (jqXHR, textStatus, errorThrown) {
                // Handle error
                console.log(errorThrown);
            }
        });
    });
</script>

