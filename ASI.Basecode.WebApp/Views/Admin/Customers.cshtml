@model ASI.Basecode.Services.ServiceModels.AdminViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .edit-button {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: rgb(20, 20, 20);
        border: none;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
        cursor: pointer;
        transition-duration: 0.3s;
        overflow: hidden;
        position: relative;
        text-decoration: none !important;
    }

    .edit-svgIcon {
        width: 17px;
        transition-duration: 0.3s;
    }

        .edit-svgIcon path {
            fill: white;
        }

    .edit-button:hover {
        width: 120px;
        border-radius: 50px;
        transition-duration: 0.3s;
        background-color: rgb(255, 69, 69);
        align-items: center;
    }

        .edit-button:hover .edit-svgIcon {
            width: 20px;
            transition-duration: 0.3s;
            transform: translateY(60%);
            -webkit-transform: rotate(360deg);
            -moz-transform: rotate(360deg);
            -o-transform: rotate(360deg);
            -ms-transform: rotate(360deg);
            transform: rotate(360deg);
        }

    .edit-button::before {
        display: none;
        content: "Edit";
        color: white;
        transition-duration: 0.3s;
        font-size: 2px;
    }

    .edit-button:hover::before {
        display: block;
        padding-right: 10px;
        font-size: 13px;
        opacity: 1;
        transform: translateY(0px);
        transition-duration: 0.3s;
    }

    .role-button {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: white;
        border: none;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
        cursor: pointer;
        transition-duration: 0.3s;
        overflow: hidden;
        position: relative;
        text-decoration: none !important;
    }

    .role-svgIcon {
        width: 17px;
        transition-duration: 0.3s;
    }

        .role-svgIcon path {
            /* fill: white; */
        }

    .role-button:hover {
        width: 120px;
        border-radius: 50px;
        transition-duration: 0.3s;
        background-color: skyblue;
        align-items: center;
    }

        .role-button:hover .edit-svgIcon {
            width: 20px;
            transition-duration: 0.3s;
            transform: translateY(60%);
            -webkit-transform: rotate(360deg);
            -moz-transform: rotate(360deg);
            -o-transform: rotate(360deg);
            -ms-transform: rotate(360deg);
            transform: rotate(360deg);
        }

    .role-button::before {
        display: none;
        content: "Role";
        color: white;
        transition-duration: 0.3s;
        font-size: 2px;
    }

    .role-button:hover::before {
        display: block;
        padding-right: 10px;
        font-size: 13px;
        opacity: 1;
        transform: translateY(0px);
        transition-duration: 0.3s;
    }

    .delete-button {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: orangered;
        border: none;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
        cursor: pointer;
        transition-duration: 0.3s;
        overflow: hidden;
        position: relative;
        text-decoration: none !important;
    }

    .delete-svgIcon {
        width: 17px;
        transition-duration: 0.3s;
    }

        .delete-svgIcon path {
            fill: white;
        }

    .delete-button:hover {
        width: 120px;
        border-radius: 50px;
        transition-duration: 0.3s;
        background-color: rgb(255, 69, 69);
        align-items: center;
    }

        .delete-button:hover .edit-svgIcon {
            width: 20px;
            transition-duration: 0.3s;
            transform: translateY(60%);
            -webkit-transform: rotate(360deg);
            -moz-transform: rotate(360deg);
            -o-transform: rotate(360deg);
            -ms-transform: rotate(360deg);
            transform: rotate(360deg);
        }

    .delete-button::before {
        display: none;
        content: "Delete";
        color: white;
        transition-duration: 0.3s;
        font-size: 2px;
    }

    .delete-button:hover::before {
        display: block;
        padding-right: 10px;
        font-size: 13px;
        opacity: 1;
        transform: translateY(0px);
        transition-duration: 0.3s;
    }
</style>

<div class="content-body">
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger" style="border-radius: 0;" role="alert">
            @TempData["error"]
        </div>
    }
    @if (ViewBag.Errors != null)
    {
        <div class="alert alert-danger" style="border-radius: 0;" role="alert">
            @ViewBag.Errors
        </div>
    }
    @if (TempData["message"] != null)
    {
        <div class="alert alert-success" style="border-radius: 0;" role="alert">
            @TempData["message"]
        </div>
    }
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="card-title">
                            <h4>Customers</h4>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover" id="customersTable">
                                <thead>
                                    <tr>
                                        <th>First name</th>
                                        <th>Last name</th>
                                        <th>Email</th>
                                        <th>Phone</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var customer in Model.Customers)
                                    {
                                        <tr>
                                            <td>@customer.FirstName</td>
                                            <td>@customer.LastName</td>
                                            <td>@customer.Users.Email</td>
                                            <td>@customer.ContactNo</td>
                                            <td>
                                                <a class="role-button roleAdminBtn" style="color: white;"
                                                   data-id="@customer.Users.Id" data-adminname="@customer.FirstName"
                                                   data-target="#editRoleModal" data-toggle="modal">
                                                    <svg class="role-svgIcon" viewBox="0 0 24 24" width="42px" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <circle cx="12" cy="7" r="5" stroke="#000000" stroke-width="2"></circle> <path d="M17 14H17.3517C18.8646 14 20.1408 15.1266 20.3285 16.6279L20.719 19.7519C20.8682 20.9456 19.9374 22 18.7344 22H5.26556C4.06257 22 3.1318 20.9456 3.28101 19.7519L3.67151 16.6279C3.85917 15.1266 5.13538 14 6.64835 14H7" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
                                                </a>
                                               
                                                <a class="edit-button editCustomerBtn mt-3 mb-3"
                                                   style="color: white;" id="showEditCustomerModalBtn" data-toggle="modal"
                                                   data-target="#editCustomerModal"
                                                   data-id="@customer.Users.Id"
                                                   data-firstname="@customer.FirstName"
                                                   data-lastname="@customer.LastName"
                                                   data-email="@customer.Users.Email"
                                                   data-username="@customer.Users.Username"
                                                   data-password="@customer.Users.Password"
                                                   data-phone="@customer.ContactNo">
                                                    <svg class="edit-svgIcon" viewBox="0 0 512 512">
                                                        <path d="M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1v32c0 8.8 7.2 16 16 16h32zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z"></path>
                                                    </svg>
                                               </a>
                                                
                                                <a class="delete-button deleteCustomerBtn" style="color: white;"
                                                   id="showDeleteCustomerModalBtn" data-toggle="modal" data-id="@customer.Users.Id" data-customername="@customer.FirstName"
                                                   data-target="#deleteCustomerModal">
                                                    <svg class="delete-svgIcon" viewBox="0 0 24 24" width="42px" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M3 6.52381C3 6.12932 3.32671 5.80952 3.72973 5.80952H8.51787C8.52437 4.9683 8.61554 3.81504 9.45037 3.01668C10.1074 2.38839 11.0081 2 12 2C12.9919 2 13.8926 2.38839 14.5496 3.01668C15.3844 3.81504 15.4756 4.9683 15.4821 5.80952H20.2703C20.6733 5.80952 21 6.12932 21 6.52381C21 6.9183 20.6733 7.2381 20.2703 7.2381H3.72973C3.32671 7.2381 3 6.9183 3 6.52381Z" fill="#1C274C"></path> <path opacity="0.5" d="M11.5956 22.0001H12.4044C15.1871 22.0001 16.5785 22.0001 17.4831 21.1142C18.3878 20.2283 18.4803 18.7751 18.6654 15.8686L18.9321 11.6807C19.0326 10.1037 19.0828 9.31524 18.6289 8.81558C18.1751 8.31592 17.4087 8.31592 15.876 8.31592H8.12405C6.59127 8.31592 5.82488 8.31592 5.37105 8.81558C4.91722 9.31524 4.96744 10.1037 5.06788 11.6807L5.33459 15.8686C5.5197 18.7751 5.61225 20.2283 6.51689 21.1142C7.42153 22.0001 8.81289 22.0001 11.5956 22.0001Z" fill="#1C274C"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M9.42543 11.4815C9.83759 11.4381 10.2051 11.7547 10.2463 12.1885L10.7463 17.4517C10.7875 17.8855 10.4868 18.2724 10.0747 18.3158C9.66253 18.3592 9.29499 18.0426 9.25378 17.6088L8.75378 12.3456C8.71256 11.9118 9.01327 11.5249 9.42543 11.4815Z" fill="#1C274C"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M14.5747 11.4815C14.9868 11.5249 15.2875 11.9118 15.2463 12.3456L14.7463 17.6088C14.7051 18.0426 14.3376 18.3592 13.9254 18.3158C13.5133 18.2724 13.2126 17.8855 13.2538 17.4517L13.7538 12.1885C13.795 11.7547 14.1625 11.4381 14.5747 11.4815Z" fill="#1C274C"></path> </g></svg>
                                               </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <!-- Add Customer Button -->
                        <div class="mt-3 text-right">
                            <button type="button" class="btn btn-info" id="showAddCustomerModalBtn">
                                <i class="icon icon-plus"></i> Add Customer
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Customer Modal -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" role="dialog" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCustomerModalLabel">Add New Customer</h5>
            </div>
            <div class="modal-body">
                <!-- Form for adding a new customer -->
                @using (Html.BeginForm("AddCustomer", "Admin", FormMethod.Post, new { @id = "addCustomerForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="customerName">First Name</label>
                        @Html.TextBox("firstName", null, new { @class = "form-control", @id = "firstName" })
                    </div>
                    <div class="form-group">
                        <label for="customerName">Last Name</label>
                        @Html.TextBox("lastName", null, new { @class = "form-control", @id = "lastName" })
                    </div>
                    <div class="form-group">
                        <label for="email">Email</label>
                        @Html.TextBox("email", null, new { @class = "form-control", @id = "email", @type = "email" })
                    </div>
                    <div class="form-group">
                        <label for="phone">Phone</label>
                        @Html.TextBox("contactNo", null, new { @class = "form-control", @id = "phone", @type = "number" })
                    </div>
                    <div class="form-group">
                        <label for="address">Username</label>
                        @Html.TextBox("username", null, new { @class = "form-control", @id = "username" })
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="addCustomerBtn">Add</button>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonAdd">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Customer Modal -->
<div class="modal fade" id="deleteCustomerModal" tabindex="-1" role="dialog" aria-labelledby="deleteCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteCustomerModalLabel">Confirm Deletion</h5>
            </div>
            <div class="modal-body">
                <p id="output">Are you sure you want to delete this customer?</p>
                <p>This action cannot be undone.</p>
            </div>
            @using (Html.BeginForm("DeleteCustomer", "Admin", FormMethod.Post, new { @id = "deleteCustomerForm" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" id="customerId" name="CustomerId" />
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonDelete">Cancel</button>
                    <button type="submit" class="btn btn-danger" id="confirmDeleteCustomerBtn">Delete</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Edit Customer Modal -->
<div class="modal fade" id="editCustomerModal" tabindex="-1" role="dialog" aria-labelledby="editCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCustomerModalLabel">Edit Customer</h5>
            </div>
            <div class="modal-body">
                <!-- Form for editing customer details -->
                @using (Html.BeginForm("EditCustomer", "Admin", FormMethod.Post, new { @id = "editCustomerForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("CustomerId", null, new { @id = "customerIdUpdate" })

                    <div class="form-group">
                        <label for="editCustomerFirstName">First Name</label>
                        @Html.TextBox("firstName", null, new { @class = "form-control", @id = "editCustomerFirstName" })
                    </div>
                    <div class="form-group">
                        <label for="editCustomerLastName">Last Name</label>
                        @Html.TextBox("lastName", null, new { @class = "form-control", @id = "editCustomerLastName" })
                    </div>
                    <div class="form-group">
                        <label for="editUsername">Username</label>
                        @Html.TextBox("username", null, new { @class = "form-control", @id = "editUsername" })
                    </div>
                    <div class="form-group">
                        <label for="editEmail">Email</label>
                        @Html.TextBox("email", null, new { @class = "form-control", @id = "editEmail" })
                    </div>

                    <div class="form-group">
                        <label for="editPhone">Phone</label>
                        @Html.TextBox("contactNo", null, new { @class = "form-control", @id = "editPhone" })
                    </div>

                    <div class="form-group">
                        <label for="editPassword">Password</label>
                        @Html.TextBox("password", null, new { @class = "form-control", @id = "editPassword" })
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="saveCustomerBtn">Save Changes</button>
                }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonEdit">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Role Modal -->
<div class="modal fade" id="editRoleModal" tabindex="-1" role="dialog" aria-labelledby="editRoleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editRoleModalLabel">Edit Role</h5>
            </div>
            <div class="modal-body">
                <!-- Form for editing role details -->
                @using (Html.BeginForm("EditUserRoleCustomer", "Admin", FormMethod.Post, new { @id = "editRoleForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("userId", null, new { @id = "userIdUpdate" })

                    <div class="form-group">
                        <label for="role">Select Role</label>
                        <select id="role" name="newRoleId" class="form-control">
                            <option value="1">Customer</option>
                            <option value="2">Agent</option>
                            @if (User.IsInRole("4"))
                            {
                                <option value="3">Admin</option>
                            }
                        </select>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="saveRoleBtn">Save Changes</button>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonEditRole">Close</button>
            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<script src="https://cdn.datatables.net/2.0.5/js/dataTables.js"></script>

<script>
    $(document).ready(function () {
        let table = new DataTable('#customersTable');

        // Modal close functionality
        $('#closeModalButtonAdd, #closeModalFooterButtonAdd').click(function () {
            $('#addCustomerModal').modal('hide');
        });

        $('#closeModalButtonEdit, #closeModalFooterButtonEdit').click(function () {
            $('#editCustomerModal').modal('hide');
        });

        $('#closeModalButtonDelete, #closeModalFooterButtonDelete').click(function () {
            $('#deleteCustomerModal').modal('hide');
        });

        $('#closeModalFooterButtonEditRole').click(function () {
            $('#editRoleModal').modal('hide');
        });

        // Show Add Customer Modal
        $('#showAddCustomerModalBtn').click(function () {
            $('#addCustomerModal').modal('show');
        });

        // Event delegation for Delete Customer Modal
        $('#customersTable tbody').on('click', '.deleteCustomerBtn', function () {
            $('#deleteCustomerModal').modal('show');
            var id = $(this).data('id');
            var customerName = $(this).data('customername');

            // Set the data attribute 'customerId' in the confirm delete button
            $('#confirmDeleteCustomerBtn').data('customerid', id);

            // Set the customer name in the modal output
            $('#output').text('Are you sure you want to delete this customer? (' + customerName + ')');
        });

        // Confirm Delete Customer
        $('#confirmDeleteCustomerBtn').click(function () {
            var customerId = $(this).data('customerid');

            // Set the hidden input values
            $('#customerId').val(customerId);

            // Submit the form
            $('#deleteCustomerForm').submit();
        });

        // Event delegation for Edit Customer Modal
        $('#customersTable tbody').on('click', '.editCustomerBtn', function () {
            var firstName = $(this).data('firstname');
            var lastName = $(this).data('lastname');
            var username = $(this).data('username');
            var email = $(this).data('email');
            var phone = $(this).data('phone');
            var password = $(this).data('password');
            var customerId = $(this).data('id');
            $('#customerIdUpdate').val(customerId);
            $('#editCustomerFirstName').val(firstName);
            $('#editCustomerLastName').val(lastName);
            $('#editUsername').val(username);
            $('#editEmail').val(email);
            $('#editPhone').val(phone);
            $('#editPassword').val(password);
            $('#editCustomerModal').modal('show');
        });

        // Event delegation for Edit Role Modal
        $('#customersTable tbody').on('click', '.roleAdminBtn', function () {
            var userId = $(this).data('id');
            $('#userIdUpdate').val(userId); // Set the user ID in the hidden field
            $('#editRoleModal').modal('show'); // Show the role modal
        });
    });
</script>
