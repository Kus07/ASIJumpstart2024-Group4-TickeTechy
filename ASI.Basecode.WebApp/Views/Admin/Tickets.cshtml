@model ASI.Basecode.Services.ServiceModels.AdminViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var statuses = ViewBag.Status as List<ASI.Basecode.Data.Models.Status>;
    var agents = ViewBag.Agents as List<ASI.Basecode.Data.Models.User>;
    var customers = ViewBag.Customers as List<ASI.Basecode.Data.Models.User>;
    var categories = ViewBag.Categories as List<ASI.Basecode.Data.Models.Category>;
}

<div class="content-body">
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger" style="border-radius: 0;" role="alert">
            @TempData["error"]
        </div>
    }
    @if (ViewBag.Errors != null)
    {
        <div class="alert alert-danger" style="border-radius: 0;" role="alert">
            @ViewBag.Errors
        </div>
    }
    @if (TempData["message"] != null)
    {
        <div class="alert alert-success" style="border-radius: 0;" role="alert">
            @TempData["message"]
        </div>
    }
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="card-title">
                            <h4>Tickets</h4>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover" id="ticketsTable">
                                <thead>
                                    <tr>
                                        <th>Description</th>
                                        <th>Category</th>
                                        <th>Created By</th>
                                        <th>Created Date</th>
                                        <th>Status</th>
                                        <th>Agent Assigned</th>
                                        <th>Priority</th>
                                        <th>Attachments</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ticket in Model.Tickets)
                                    {
                                        <tr>
                                            <td>@ticket.Description</td>
                                            <td>@ticket.Category</td>
                                            <td>@ticket.CreatedBy</td>
                                            <td>@ticket.CreatedDate</td>
                                            <td style="color: white;">
                                                @if (ticket.Status == "OPEN")
                                                {
                                                    <span class="badge bg-primary">@ticket.Status</span> <!-- Blue for OPEN -->
                                                }
                                                else if (ticket.Status == "WAITINGRESPONSE" || ticket.Status== "ONGOING")
                                                {
                                                    <span class="badge bg-warning text-dark">@ticket.Status</span> <!-- Orange for WAITINGFORAPPROVAL and ONGOING -->
                                                }
                                                else if (ticket.Status== "RESOLVED")
                                                {
                                                    <span class="badge bg-success">@ticket.Status</span> <!-- Green for RESOLVED -->
                                                }
                                                else if (ticket.Status== "CLOSED")
                                                {
                                                    <span class="badge bg-danger">@ticket.Status</span> <!-- Red for CLOSED -->
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">@ticket.Status</span> <!-- Grey for any other statuses -->
                                                }
                                            </td>
                                            <td>@ticket.AssignedTo</td>
                                            <td>@ticket.Priority</td>
                                            <td>
                                                @if (ticket.AttachmentPath != null && ticket.AttachmentPath.Any())
                                                {
                                                    <a href="@Url.Action("DownloadAttachment", "File", new { id = ticket.Id })">Download</a>
                                                }
                                                else
                                                {
                                                    <span>No attachments</span>
                                                }
                                            </td>
                                            <td>
                                                <a class="btn btn-info editTicketBtn"
                                                   style="color: white;" id="showEditTicketModalBtn" data-toggle="modal"
                                                   data-target="#editTicketModal"
                                                   data-id="@ticket.Id"
                                                   data-description="@ticket.Description"
                                                   data-category="@ticket.Category"
                                                   data-createdby="@ticket.CreatedBy"
                                                   data-status="@ticket.Status"
                                                   data-agentassigned="@ticket.AssignedTo"
                                                   data-priority="@ticket.Priority"
                                                   data-attachments="@ticket.AttachmentPath">Edit</a>
                                                ||
                                                <a class="btn btn-danger deleteTicketBtn" style="color: white;"
                                                   id="showDeleteTicketModalBtn" data-toggle="modal" data-id="@ticket.Id" data-description="@ticket.Description"
                                                   data-target="#deleteTicketModal">Delete</a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <!-- Add Ticket Button -->
                        <div class="mt-3 text-right">
                            <button type="button" class="btn btn-info" id="showAddTicketModalBtn">
                                <i class="icon icon-plus"></i> Add Ticket
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Ticket Modal -->
<div class="modal fade" id="addTicketModal" tabindex="-1" role="dialog" aria-labelledby="addTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addTicketModalLabel">Add New Ticket</h5>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AddTicket", "Admin", FormMethod.Post, new { @id = "addTicketForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="description">Description</label>
                        @Html.TextBox("description", null, new { @class = "form-control", @id = "description" })
                    </div>
                    <div class="form-group">
                        <label for="category">Category</label>
                        <select class="form-control" name="category">
                            @foreach (var category in categories)
                            {
                                <option value="@category.Id">@category.CategoryName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="createdBy">Created By</label>
                        <select class="form-control" name="customerId">
                            @foreach (var customer in customers)
                            {
                                <option value="@customer.Id">@customer.UserDetails.FirstOrDefault().FirstName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="status">Status</label>
                        <select class="form-control" name="status">
                            @foreach(var status in statuses)
                            {
                                <option value="@status.Id">@status.StatusName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="agentAssigned">Agent Assigned</label>
                        <select class="form-control" name="agentId">
                            @foreach (var agent in agents)
                            {
                                <option value="@agent.Id">@agent.UserDetails.FirstOrDefault().FirstName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="priority">Priority</label>
                        <select class="form-control" name="priority">
                            <option value="High">High</option>
                            <option value="Medium">Medium</option>
                            <option value="Low">Low</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="attachments">Attachments</label>
                        <input type="file" name="attachment" accept="image/x-png,image/gif,image/jpeg" class="form-control" id="attachments" />
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="addTicketBtn">Add</button>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonAdd">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Ticket Modal -->
<div class="modal fade" id="editTicketModal" tabindex="-1" role="dialog" aria-labelledby="editTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editTicketModalLabel">Edit Ticket</h5>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("EditTicket", "Admin", FormMethod.Post, new { @id = "editTicketForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("ticketId", null, new { @id = "ticketIdUpdate" })

                    <div class="form-group">
                        <label for="editDescription">Description</label>
                        @Html.TextBox("description", null, new { @class = "form-control", @id = "editDescription" })
                    </div>
                    <div class="form-group">
                        <label for="editCategory">Category</label>
                        <select class="form-control" name="category" id="editCategory">
                            @foreach (var category in categories)
                            {
                                <option value="@category.CategoryName">@category.CategoryName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editCreatedBy">Created By</label>
                        @Html.TextBox("createdBy", null, new { @class = "form-control", @id = "editCreatedBy", @disabled = "true" })
                    </div>
                    <div class="form-group">
                        <label for="editStatus">Status</label>
                        <select class="form-control" name="status" id="editStatus">
                            @foreach (var status in statuses)
                            {
                                <option value="@status.StatusName">@status.StatusName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editAgentAssigned">Agent Assigned</label>
                        @Html.TextBox("agentAssigned", null, new { @class = "form-control", @id = "editAgentAssigned", @disabled = "true" })
                    </div>
                    <div class="form-group">
                        <label for="editPriority">Priority</label>
                        <select class="form-control" name="priority" id="editPriority">
                            <option value="High">High</option>
                            <option value="Medium">Medium</option>
                            <option value="Low">Low</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editAttachments">Attachments</label>
                        <input type="file" name="attachment" accept="image/x-png,image/gif,image/jpeg" class="form-control" id="editAttachments" multiple />
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="saveTicketBtn">Save Changes</button>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonEdit">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Ticket Modal -->
<div class="modal fade" id="deleteTicketModal" tabindex="-1" role="dialog" aria-labelledby="deleteTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteTicketModalLabel">Delete Ticket</h5>
            </div>
            <div class="modal-body">
                <p id="output">Are you sure you want to delete this ticket: <strong id="ticketDescriptionDelete"></strong>?</p>
                <form method="post" action="@Url.Action("DeleteTicket", "Admin")" id="deleteTicketForm">
                    @Html.AntiForgeryToken()
                    @Html.Hidden("ticketId", null, new { @id = "ticketIdDelete" })
                    <button type="submit" id="confirmDeleteTicketBtn" class="btn btn-danger">Delete</button>
                </form>
            </div>
            <div class="modal-footer">
                <button id="closeModalButtonDelete" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.datatables.net/2.0.5/js/dataTables.js"></script>

<script>
    $(document).ready(function () {
        // Initialize DataTable for tickets
        // let table = new DataTable('#ticketsTable');
        let table = new DataTable('#ticketsTable', {
            order: [[3, 'desc']],
            language: {
                emptyTable: 'No tickets created yet!'
            },
            columnDefs: [
                { type: 'date', targets: 3 } // Specify that the 4th column (index 3) is of type 'date'
            ]
        });



        // Modal close functionality for tickets
        $('#closeModalButtonAdd, #closeModalFooterButtonAdd').click(function () {
            $('#addTicketModal').modal('hide');
        });

        $('#closeModalButtonEdit, #closeModalFooterButtonEdit').click(function () {
            $('#editTicketModal').modal('hide');
        });

        $('#closeModalButtonDelete, #closeModalFooterButtonDelete').click(function () {
            $('#deleteTicketModal').modal('hide');
        });

        // Show Add Ticket Modal
        $('#showAddTicketModalBtn').click(function () {
            $('#addTicketModal').modal('show');
        });

        // Event delegation for Delete Ticket Modal
        $('#ticketsTable tbody').on('click', '.deleteTicketBtn', function () {
            $('#deleteTicketModal').modal('show');
            var id = $(this).data('id');
            var description = $(this).data('description');

            // Set the data attribute 'ticketId' in the confirm delete button
            $('#confirmDeleteTicketBtn').data('ticketid', id);

            // Set the ticket description in the modal output
            $('#output').text('Are you sure you want to delete this ticket? (' + description + ')');
        });

        // Confirm Delete Ticket
        $('#confirmDeleteTicketBtn').click(function () {
            var ticketId = $(this).data('ticketid');

            // Set the hidden input values
            $('#ticketIdDelete').val(ticketId);

            // Submit the form
            $('#deleteTicketForm').submit();
        });

        // Event delegation for Edit Ticket Modal
        $('#ticketsTable tbody').on('click', '.editTicketBtn', function () {
            var description = $(this).data('description');
            var category = $(this).data('category');
            var createdBy = $(this).data('createdby');
            var status = $(this).data('status');
            var agentAssigned = $(this).data('agentassigned');
            var priority = $(this).data('priority');
            var ticketId = $(this).data('id');

            // Populate the form fields with ticket data
            $('#ticketIdUpdate').val(ticketId);
            $('#editDescription').val(description);
            $('#editCategory').val(category);
            $('#editCreatedBy').val(createdBy);
            $('#editStatus').val(status);
            $('#editAgentAssigned').val(agentAssigned);
            $('#editPriority').val(priority);

            // Show the edit ticket modal
            $('#editTicketModal').modal('show');
        });

        // Event delegation for Generate Report Modal (if applicable)
        $('#ticketsTable tbody').on('click', '.generateReportBtn', function () {
            $('#generateReportModal').modal('show');
            var agentId = $(this).data('agentid');
            var agentName = $(this).data('agentname');

            // Send AJAX request to generate the agent's report
            $.ajax({
                url: '@Url.Action("GenerateAgentReport", "Tickets")',
                type: 'POST',
                data: { agentId: agentId },
                success: function (response) {
                    // Show the report in the modal
                    $('#output').text(response);
                    $('#generateReportModal').modal('show');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Handle error
                    console.log(errorThrown);
                }
            });
        });
    });
</script>

