@model ASI.Basecode.Services.ServiceModels.AdminViewModel
@using static ASI.Basecode.Resources.Views.Screen
@using static ASI.Basecode.Resources.Views.Button
@using static ASI.Basecode.Resources.Messages.Errors
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var statuses = ViewBag.Status as List<ASI.Basecode.Data.Models.Status>;
    var agents = ViewBag.Agents as List<ASI.Basecode.Data.Models.User>;
    var customers = ViewBag.Customers as List<ASI.Basecode.Data.Models.User>;
    var categories = ViewBag.Categories as List<ASI.Basecode.Data.Models.Category>;
}


<style>
    .edit-button {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: rgb(20, 20, 20);
        border: none;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
        cursor: pointer;
        transition-duration: 0.3s;
        overflow: hidden;
        position: relative;
        text-decoration: none !important;
    }

    .edit-svgIcon {
        width: 17px;
        transition-duration: 0.3s;
    }

        .edit-svgIcon path {
            fill: white;
        }

    .edit-button:hover {
        width: 120px;
        border-radius: 50px;
        transition-duration: 0.3s;
        background-color: deepskyblue;
        align-items: center;
    }

        .edit-button:hover .edit-svgIcon {
            width: 20px;
            transition-duration: 0.3s;
            transform: translateY(60%);
            -webkit-transform: rotate(360deg);
            -moz-transform: rotate(360deg);
            -o-transform: rotate(360deg);
            -ms-transform: rotate(360deg);
            transform: rotate(360deg);
        }

    .edit-button::before {
        display: none;
        content: "Edit";
        color: white;
        transition-duration: 0.3s;
        font-size: 2px;
    }

    .edit-button:hover::before {
        display: block;
        padding-right: 10px;
        font-size: 13px;
        opacity: 1;
        transform: translateY(0px);
        transition-duration: 0.3s;
    }

    .delete-button {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: orangered;
        border: none;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.164);
        cursor: pointer;
        transition-duration: 0.3s;
        overflow: hidden;
        position: relative;
        text-decoration: none !important;
    }

    .delete-svgIcon {
        width: 17px;
        transition-duration: 0.3s;
    }

        .delete-svgIcon path {
            fill: white;
        }

    .delete-button:hover {
        width: 120px;
        border-radius: 50px;
        transition-duration: 0.3s;
        background-color: rgb(255, 69, 69);
        align-items: center;
    }

        .delete-button:hover .edit-svgIcon {
            width: 20px;
            transition-duration: 0.3s;
            transform: translateY(60%);
            -webkit-transform: rotate(360deg);
            -moz-transform: rotate(360deg);
            -o-transform: rotate(360deg);
            -ms-transform: rotate(360deg);
            transform: rotate(360deg);
        }

    .delete-button::before {
        display: none;
        content: "Delete";
        color: white;
        transition-duration: 0.3s;
        font-size: 2px;
    }

    .delete-button:hover::before {
        display: block;
        padding-right: 10px;
        font-size: 13px;
        opacity: 1;
        transform: translateY(0px);
        transition-duration: 0.3s;
    }
</style>

<div class="content-body">
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger" style="border-radius: 0;" role="alert">
            @TempData["error"]
        </div>
    }
    @if (ViewBag.Errors != null)
    {
        <div class="alert alert-danger" style="border-radius: 0;" role="alert">
            @ViewBag.Errors
        </div>
    }
    @if (TempData["message"] != null)
    {
        <div class="alert alert-success" style="border-radius: 0;" role="alert">
            @TempData["message"]
        </div>
    }
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="card-title">
                            <h4>@Tickets</h4>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-hover" id="ticketsTable">
                                <thead>
                                    <tr>
                                        <th>@Description</th>
                                        <th>@Category</th>
                                        <th>@CreatedBy</th>
                                        <th>@CreatedDate</th>
                                        <th>@Status</th>
                                        <th>@AgentAssigned</th>
                                        <th>@Priority</th>
                                        <th>@Attachments</th>
                                        <th>@ActionLabel</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ticket in Model.Tickets)
                                    {
                                        <tr>
                                            <td>@ticket.Description</td>
                                            <td>@ticket.Category</td>
                                            <td>@ticket.CreatedBy</td>
                                            <td>@ticket.CreatedDate</td>
                                            <td style="color: white;">
                                                @if (ticket.Status == "OPEN")
                                                {
                                                    <span class="badge bg-primary">@ticket.Status</span> <!-- Blue for OPEN -->
                                                }
                                                else if (ticket.Status == "WAITINGRESPONSE" || ticket.Status== "ONGOING")
                                                {
                                                    <span class="badge bg-warning text-dark">@ticket.Status</span> <!-- Orange for WAITINGFORAPPROVAL and ONGOING -->
                                                }
                                                else if (ticket.Status== "RESOLVED")
                                                {
                                                    <span class="badge bg-success">@ticket.Status</span> <!-- Green for RESOLVED -->
                                                }
                                                else if (ticket.Status== "CLOSED")
                                                {
                                                    <span class="badge bg-danger">@ticket.Status</span> <!-- Red for CLOSED -->
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">@ticket.Status</span> <!-- Grey for any other statuses -->
                                                }
                                            </td>
                                            <td>@ticket.AssignedTo</td>
                                            <td>@ticket.Priority</td>
                                            <td>
                                                @if (ticket.AttachmentPath != null && ticket.AttachmentPath.Any())
                                                {
                                                    <a href="@Url.Action("DownloadAttachment", "File", new { id = ticket.Id })">Download</a>
                                                }
                                                else
                                                {
                                                    <span>No attachments</span>
                                                }
                                            </td>
                                            <td>
                                                <a class="edit-button editTicketBtn"
                                                   style="color: white;" id="showEditTicketModalBtn" data-toggle="modal"
                                                   data-target="#editTicketModal"
                                                   data-id="@ticket.Id"
                                                   data-description="@ticket.Description"
                                                   data-category="@ticket.Category"
                                                   data-createdby="@ticket.CreatedBy"
                                                   data-status="@ticket.Status"
                                                   data-agentassigned="@ticket.AssignedTo"
                                                   data-priority="@ticket.Priority"
                                                   data-attachments="@ticket.AttachmentPath">
                                                    <svg class="edit-svgIcon" viewBox="0 0 512 512">
                                                        <path d="M410.3 231l11.3-11.3-33.9-33.9-62.1-62.1L291.7 89.8l-11.3 11.3-22.6 22.6L58.6 322.9c-10.4 10.4-18 23.3-22.2 37.4L1 480.7c-2.5 8.4-.2 17.5 6.1 23.7s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L387.7 253.7 410.3 231zM160 399.4l-9.1 22.7c-4 3.1-8.5 5.4-13.3 6.9L59.4 452l23-78.1c1.4-4.9 3.8-9.4 6.9-13.3l22.7-9.1v32c0 8.8 7.2 16 16 16h32zM362.7 18.7L348.3 33.2 325.7 55.8 314.3 67.1l33.9 33.9 62.1 62.1 33.9 33.9 11.3-11.3 22.6-22.6 14.5-14.5c25-25 25-65.5 0-90.5L453.3 18.7c-25-25-65.5-25-90.5 0zm-47.4 168l-144 144c-6.2 6.2-16.4 6.2-22.6 0s-6.2-16.4 0-22.6l144-144c6.2-6.2 16.4-6.2 22.6 0s6.2 16.4 0 22.6z"></path>
                                                    </svg>
                                               </a>

                                                <a class="delete-button mt-3 mb-3 deleteTicketBtn" style="color: white;"
                                                   id="showDeleteTicketModalBtn" data-toggle="modal" data-id="@ticket.Id" data-description="@ticket.Description"
                                                   data-target="#deleteTicketModal">
                                                    <svg class="delete-svgIcon" viewBox="0 0 24 24" width="42px" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M3 6.52381C3 6.12932 3.32671 5.80952 3.72973 5.80952H8.51787C8.52437 4.9683 8.61554 3.81504 9.45037 3.01668C10.1074 2.38839 11.0081 2 12 2C12.9919 2 13.8926 2.38839 14.5496 3.01668C15.3844 3.81504 15.4756 4.9683 15.4821 5.80952H20.2703C20.6733 5.80952 21 6.12932 21 6.52381C21 6.9183 20.6733 7.2381 20.2703 7.2381H3.72973C3.32671 7.2381 3 6.9183 3 6.52381Z" fill="#1C274C"></path> <path opacity="0.5" d="M11.5956 22.0001H12.4044C15.1871 22.0001 16.5785 22.0001 17.4831 21.1142C18.3878 20.2283 18.4803 18.7751 18.6654 15.8686L18.9321 11.6807C19.0326 10.1037 19.0828 9.31524 18.6289 8.81558C18.1751 8.31592 17.4087 8.31592 15.876 8.31592H8.12405C6.59127 8.31592 5.82488 8.31592 5.37105 8.81558C4.91722 9.31524 4.96744 10.1037 5.06788 11.6807L5.33459 15.8686C5.5197 18.7751 5.61225 20.2283 6.51689 21.1142C7.42153 22.0001 8.81289 22.0001 11.5956 22.0001Z" fill="#1C274C"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M9.42543 11.4815C9.83759 11.4381 10.2051 11.7547 10.2463 12.1885L10.7463 17.4517C10.7875 17.8855 10.4868 18.2724 10.0747 18.3158C9.66253 18.3592 9.29499 18.0426 9.25378 17.6088L8.75378 12.3456C8.71256 11.9118 9.01327 11.5249 9.42543 11.4815Z" fill="#1C274C"></path> <path fill-rule="evenodd" clip-rule="evenodd" d="M14.5747 11.4815C14.9868 11.5249 15.2875 11.9118 15.2463 12.3456L14.7463 17.6088C14.7051 18.0426 14.3376 18.3592 13.9254 18.3158C13.5133 18.2724 13.2126 17.8855 13.2538 17.4517L13.7538 12.1885C13.795 11.7547 14.1625 11.4381 14.5747 11.4815Z" fill="#1C274C"></path> </g></svg>
                                               </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <!-- Add Ticket Button -->
                        <div class="mt-3 text-right">
                            <button type="button" class="btn btn-info" id="showAddTicketModalBtn">
                                <i class="icon icon-plus"></i> @AddTicketBtn
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Ticket Modal -->
<div class="modal fade" id="addTicketModal" tabindex="-1" role="dialog" aria-labelledby="addTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addTicketModalLabel">@AddNewTicket</h5>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AddTicket", "Admin", FormMethod.Post, new { @id = "addTicketForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="description">@Description</label>
                        @Html.TextBox("description", null, new { @class = "form-control", @id = "description" })
                    </div>
                    <div class="form-group">
                        <label for="category">@Category</label>
                        <select class="form-control" name="category">
                            @foreach (var category in categories)
                            {
                                <option value="@category.Id">@category.CategoryName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="createdBy">@CreatedBy</label>
                        <select class="form-control" name="customerId">
                            @foreach (var customer in customers)
                            {
                                <option value="@customer.Id">@customer.UserDetails.FirstOrDefault().FirstName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="status">@Status</label>
                        <select class="form-control" name="status">
                            @foreach(var status in statuses)
                            {
                                <option value="@status.Id">@status.StatusName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="agentAssigned">@AgentAssigned</label>
                        <select class="form-control" name="agentId">
                            @foreach (var agent in agents)
                            {
                                <option value="@agent.Id">@agent.UserDetails.FirstOrDefault().FirstName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="priority">@Priority</label>
                        <select class="form-control" name="priority">
                            <option value="High">High</option>
                            <option value="Medium">Medium</option>
                            <option value="Low">Low</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="attachments">@Attachments</label>
                        <input type="file" name="attachment" accept="image/x-png,image/gif,image/jpeg" class="form-control" id="attachments" />
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="addTicketBtn">@AddBtn</button>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonAdd">@CloseBtn</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Ticket Modal -->
<div class="modal fade" id="editTicketModal" tabindex="-1" role="dialog" aria-labelledby="editTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editTicketModalLabel">@EditTicket</h5>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("EditTicket", "Admin", FormMethod.Post, new { @id = "editTicketForm", @enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("ticketId", null, new { @id = "ticketIdUpdate" })

                    <div class="form-group">
                        <label for="editDescription">@Description</label>
                        @Html.TextBox("description", null, new { @class = "form-control", @id = "editDescription" })
                    </div>
                    <div class="form-group">
                        <label for="editCategory">@Category</label>
                        <select class="form-control" name="category" id="editCategory">
                            @foreach (var category in categories)
                            {
                                <option value="@category.CategoryName">@category.CategoryName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editCreatedBy">@CreatedBy</label>
                        @Html.TextBox("createdBy", null, new { @class = "form-control", @id = "editCreatedBy", @disabled = "true" })
                    </div>
                    <div class="form-group">
                        <label for="editStatus">@Status</label>
                        <select class="form-control" name="status" id="editStatus">
                            @foreach (var status in statuses)
                            {
                                <option value="@status.StatusName">@status.StatusName</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editAgentAssigned">@AgentAssigned</label>
                        @Html.TextBox("agentAssigned", null, new { @class = "form-control", @id = "editAgentAssigned", @disabled = "true" })
                    </div>
                    <div class="form-group">
                        <label for="editPriority">@Priority</label>
                        <select class="form-control" name="priority" id="editPriority">
                            <option value="High">High</option>
                            <option value="Medium">Medium</option>
                            <option value="Low">Low</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editAttachments">@Attachments</label>
                        <input type="file" name="attachment" accept="image/x-png,image/gif,image/jpeg" class="form-control" id="editAttachments" multiple />
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary" id="saveTicketBtn">@SaveChangesBtn</button>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModalFooterButtonEdit">@CloseBtn</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Ticket Modal -->
<div class="modal fade" id="deleteTicketModal" tabindex="-1" role="dialog" aria-labelledby="deleteTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteTicketModalLabel">@DeleteTicket</h5>
            </div>
            <div class="modal-body">
                <p id="output">@AreYouSureDeleteTicket: <strong id="ticketDescriptionDelete"></strong>?</p>
                <form method="post" action="@Url.Action("DeleteTicket", "Admin")" id="deleteTicketForm">
                    @Html.AntiForgeryToken()
                    @Html.Hidden("ticketId", null, new { @id = "ticketIdDelete" })
                    <button type="submit" id="confirmDeleteTicketBtn" class="btn btn-danger">@DeleteBtn</button>
                </form>
            </div>
            <div class="modal-footer">
                <button id="closeModalButtonDelete" type="button" class="btn btn-secondary" data-dismiss="modal">@CloseBtn</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.datatables.net/2.0.5/js/dataTables.js"></script>

<script>
    $(document).ready(function () {
        // Initialize DataTable for tickets
        // let table = new DataTable('#ticketsTable');
        let table = new DataTable('#ticketsTable', {
            order: [[3, 'desc']],
            language: {
                emptyTable: 'No tickets created yet!'
            },
            columnDefs: [
                { type: 'date', targets: 3 } // Specify that the 4th column (index 3) is of type 'date'
            ]
        });



        // Modal close functionality for tickets
        $('#closeModalButtonAdd, #closeModalFooterButtonAdd').click(function () {
            $('#addTicketModal').modal('hide');
        });

        $('#closeModalButtonEdit, #closeModalFooterButtonEdit').click(function () {
            $('#editTicketModal').modal('hide');
        });

        $('#closeModalButtonDelete, #closeModalFooterButtonDelete').click(function () {
            $('#deleteTicketModal').modal('hide');
        });

        // Show Add Ticket Modal
        $('#showAddTicketModalBtn').click(function () {
            $('#addTicketModal').modal('show');
        });

        // Event delegation for Delete Ticket Modal
        $('#ticketsTable tbody').on('click', '.deleteTicketBtn', function () {
            $('#deleteTicketModal').modal('show');
            var id = $(this).data('id');
            var description = $(this).data('description');

            // Set the data attribute 'ticketId' in the confirm delete button
            $('#confirmDeleteTicketBtn').data('ticketid', id);

            // Set the ticket description in the modal output
            $('#output').text('Are you sure you want to delete this ticket? (' + description + ')');
        });

        // Confirm Delete Ticket
        $('#confirmDeleteTicketBtn').click(function () {
            var ticketId = $(this).data('ticketid');

            // Set the hidden input values
            $('#ticketIdDelete').val(ticketId);

            // Submit the form
            $('#deleteTicketForm').submit();
        });

        // Event delegation for Edit Ticket Modal
        $('#ticketsTable tbody').on('click', '.editTicketBtn', function () {
            var description = $(this).data('description');
            var category = $(this).data('category');
            var createdBy = $(this).data('createdby');
            var status = $(this).data('status');
            var agentAssigned = $(this).data('agentassigned');
            var priority = $(this).data('priority');
            var ticketId = $(this).data('id');

            // Populate the form fields with ticket data
            $('#ticketIdUpdate').val(ticketId);
            $('#editDescription').val(description);
            $('#editCategory').val(category);
            $('#editCreatedBy').val(createdBy);
            $('#editStatus').val(status);
            $('#editAgentAssigned').val(agentAssigned);
            $('#editPriority').val(priority);

            // Show the edit ticket modal
            $('#editTicketModal').modal('show');
        });

        // Event delegation for Generate Report Modal (if applicable)
        $('#ticketsTable tbody').on('click', '.generateReportBtn', function () {
            $('#generateReportModal').modal('show');
            var agentId = $(this).data('agentid');
            var agentName = $(this).data('agentname');

            // Send AJAX request to generate the agent's report
            $.ajax({
                url: '@Url.Action("GenerateAgentReport", "Tickets")',
                type: 'POST',
                data: { agentId: agentId },
                success: function (response) {
                    // Show the report in the modal
                    $('#output').text(response);
                    $('#generateReportModal').modal('show');
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    // Handle error
                    console.log(errorThrown);
                }
            });
        });
    });
</script>

